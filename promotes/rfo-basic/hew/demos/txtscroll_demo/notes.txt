


(ahem),. Ladies and Gentlemen, I present you with a breakthrough,
a milestone, a marking of rfo-basic history.. but of course i say that 
due to losing my mind from weeks of tortuous coding. Ah, but
from this insane self inflicting endurement, is born..
The Slippery Invisible Perpetual Text Scroll Engine' : txtscroll.bas

Slippery: Oh so familiar amongst the wise in this group, that it uses the
'bitmap technique' or as i like to call it the 'bitmap slide' for
smooth silky scrolling. 

Invisible: The most 'bang for buck'. With just a handful of lines, it
uses gr.clip to mask away the parts you shouldn't see. Puff!.. smoke
and mirrors..

Perpetual: Feed it text, feed it lots of text. Lists as long as you can
muster. It cares not, it will scroll without rest using rotating buffers.

--------
(takes his pills and a good night's sleep)

If you have not already guessed, it is a Text Pane widget with vertical scrolling
either by touch or remote command.

Ok, I exaggerate a bit about the smoothness. It's no problem with the phones you buy
these days, nice N smooth. But on the old phone, well.. it just passes as useable.

The widget is designed for use in the HEW framework (included in demo).
http://humpty.drivehq.com/promotes/rfo-basic/hew/hew.html

The manual is here
http://humpty.drivehq.com/promotes/rfo-basic/hew/manual.html#txtscroll
Source zip is here
http://humpty.drivehq.com/promotes/rfo-basic/hew/txtscroll_demo/txtscroll_demo.zip
APK file here.
http://www.laughton.com/basic/programs/tools/HEW/tsdemo1000.apk

To use it without the framework, hack the code to supply variables 
scr_w, scr_h, scale_x and scale_y

constructor:  txtscroll_make (name$, tlist, x,y,ww,wh)
callback   :  txtscroll (cmd$, num, wg)
cmd$="touch"  : Call it at the start of a touch. It will track the y position until figner off.
cmd$="scroll" : Is a remote-mode. It will scroll 'num' lines wihtout touch.

Features:
	* all of the above
	* any size pane to full screen (even works with 1 line!)
	* finger slide. and a simple velocity fling (can be improved).

I'm really not kidding in saying it was a real bugger to code.
For the future, I think it's possible to extend or 'subclass' this widget into some sort 
text output console.


